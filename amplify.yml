version: 1
backend:
  phases:
    build:
      commands:
        - echo "No backend build needed"
frontend:
  phases:
    preBuild:
      commands:
        - 'echo "Starting preBuild phase at $(date)"'
        - npm ci --cache .npm --prefer-offline
        - 'export NODE_OPTIONS="--max_old_space_size=4096"' # Increase Node.js memory limit
        # Create the .env.production file and append environment variables
        - touch .env.production
        - 'echo "Creating environment variables file"'
        # Simplify the environment variable setup to avoid YAML parsing issues
        - 'env | grep -e DATABASE_URL >> .env.production || true'
        - 'env | grep -e JWT_SECRET >> .env.production || true'
        - 'env | grep -e NEXTAUTH_SECRET >> .env.production || true'
        - 'env | grep -e NEXT_PUBLIC_NEXTAUTH_URL >> .env.production || true'
        - 'env | grep -e CALLBACK_URL >> .env.production || true'
        - 'env | grep -e RESEND_KEY >> .env.production || true'
        - 'env | grep -e S3SECRET_ACCESS_KEY >> .env.production || true'
        - 'env | grep -e S3ACCESS_KEY_ID >> .env.production || true'
        - 'env | grep -e BUCKET_NAME >> .env.production || true'
        - 'env | grep -e PUSHER_APP_SECRET >> .env.production || true'
        - 'env | grep -e PUSHER_APP_ID >> .env.production || true'
        - 'env | grep -e PUSHER_APP_KEY >> .env.production || true'
        - 'env | grep -e PUSHER_CLUSTER >> .env.production || true'
        - 'env | grep -e NODEMAILER_PASS >> .env.production || true'
        - 'env | grep -e NODDEMAILER_EMAIL >> .env.production || true'
        # Generate Prisma client for the correct environment
        - 'echo "Generating Prisma client"'
        - npx prisma db push
        - npx prisma generate
        - 'echo "preBuild phase completed at $(date)"'
    build:
      commands:
        - 'echo "Build phase started on $(date)"'
        - 'echo "NODE_OPTIONS: $NODE_OPTIONS"'
        - 'echo "Running Next.js build"'
        # Simplified build command
        - npm run build
        - 'echo "Build phase completed on $(date)"'
    postBuild:
      commands:
        - 'echo "Post-build phase started on $(date)"'
        # Don't try to run the server in CI as it might not work
        - 'echo "Build artifacts created successfully"'
  artifacts:
    baseDirectory: .next
    files:
      - '**/*'
    # Also include important config files and server.js
    discard-paths: no
    secondary-artifacts:
      config:
        files:
          - server.js
          - package.json
          - prisma/**/*
          - next.config.js
  cache:
    paths:
      - node_modules/**/*
      - .next/cache/**/*
      - .npm/**/*
      - .prisma/**/*
  customHeaders:
    - pattern: '**/*.html'
      headers:
        - key: 'Cache-Control'
          value: 'max-age=0, no-cache, no-store, must-revalidate'
    - pattern: '/api/socketio'
      headers:
        - key: 'Connection'
          value: 'keep-alive'
        - key: 'Upgrade'
          value: 'websocket'
  buildSpec:
    timeout: 60 # Increase build timeout to 60 minutes (default is 15) 