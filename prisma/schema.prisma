generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

model User {
  id            String       @default(cuid()) @id
  firstName          String?
  lastName          String?
  email         String?   @unique
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  @@map(name: "users")
  phoneNumber String? @unique
  password    String 
  role        String?    @default("EMPLOYEE")
  bio String?
  posts       Post[]
  title String?
  pronouns String?
  location String?
  currentPosition String?
  education String?
  emailVerified DateTime?
  gotStarted Boolean @default(false)

  friends  User[] @relation("friends")
  frinedsOf User[] @relation("friends")

  sentFriendRequest User[] @relation("sentFriendRequest")
  pendingFriendRequest User[] @relation("sentFriendRequest")

  messagesSent       Message[]    @relation("messagesSent")
  messagesReceived   Message[]    @relation("messagesReceived")
  messagesRead     Message[] @relation("messagesRead")
  
}

model Message {
  id                 String       @default(cuid()) @id
  createdAt          DateTime     @default(now()) @map(name: "created_at")
  updatedAt          DateTime     @updatedAt @map(name: "updated_at")

  text               String
  sender             User         @relation("messagesSent", fields: [senderId], references: [id])
  senderId           String
  recipient          User         @relation("messagesReceived", fields: [recipientId], references: [id])
  recipientId        String
  readBy           User[]       @relation("messagesRead")

}

model Post {
  id        String     @default(cuid()) @id
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  title     String
  content   String?
  published Boolean @default(false)
  author    User?   @relation(fields: [authorId], references: [id])
  authorId  String?
  categories Category[]
}


model Category {
  id    Int    @id @default(autoincrement())
  name  String
  posts Post[]
}


