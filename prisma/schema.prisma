generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @default(cuid()) @id
  firstName          String?
  lastName          String?
  email         String?   @unique
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  @@map(name: "users")
  phoneNumber String? @unique
  password    String 
  role        Role    @default(EMPLOYEE)
  bio String?
  posts       Post[]
  title String?
  pronouns String?
  location String?
  currentPosition String?
  education String?
  emailVerified DateTime?

  friends  User[] @relation("friends")
  frinedsOf User[] @relation("friends")

  sentFriendRequest User[] @relation("sentFriendRequest")
  pendingFriendRequest User[] @relation("sentFriendRequest")

  conversationIds String[] 
  conversaitions Conversation[]

  seenMessageIds String[]
  seenMessages Message[] 
}



model Conversation{
  id String @id @default(dbgenerated()) @map("_id")
  createdAt DateTime @default(now())
  lastMessageAt DateTime @default(now())
  name String?
  isGroup Boolean?

  messageIds String[]
  messages Message[]

  userIds String[] 
  users User[] 
}

model Message {
  id String @default(dbgenerated()) @id @map("_id")
  body String?
  image String?
  createdAt DateTime @default(now())

  seenIds String[]

  conversationId String
  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  senderId String
  sender User @relation(fields: [senderId], references: [id], onDelete: Cascade)
}


enum Role {
  EMPLOYER
  EMPLOYEE
  ADMIN
}

model Post {
  id        String     @default(cuid()) @id
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  title     String
  content   String?
  published Boolean @default(false)
  author    User?   @relation(fields: [authorId], references: [id])
  authorId  String?
  categories Category[]
}


model Category {
  id    Int    @id @default(autoincrement())
  name  String
  posts Post[]
}


